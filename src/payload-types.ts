/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    home: Home;
    pages: Page;
    menus: Menu;
    medias: Media;
    categories: Category;
    users: User;
    redirects: Redirect;
  };
  globals: {
    scripts: Script;
    contactUs: ContactUs;
  };
}
export interface Home {
  id: string;
  title: string;
  hero?: {
    slides: {
      title?: {
        [k: string]: unknown;
      }[];
      content?: {
        [k: string]: unknown;
      }[];
      callToAction?: {
        label: string;
        type: 'internal' | 'external';
        internal: string | Page;
        url: string;
        newTab?: boolean;
      };
      media: string | Media;
      id?: string;
    }[];
  };
  productsSummary?: {
    title: {
      [k: string]: unknown;
    }[];
    slides: {
      title?: {
        [k: string]: unknown;
      }[];
      content?: {
        [k: string]: unknown;
      }[];
      callToAction?: {
        label: string;
        type: 'internal' | 'external';
        internal: string | Page;
        url: string;
        newTab?: boolean;
      };
      media: string | Media;
      id?: string;
    }[];
  };
  slug: string;
  meta?: {
    title?: string;
    description?: string;
  };
  createdAt: string;
  updatedAt: string;
}
export interface Page {
  id: string;
  title: string;
  layout?: (
    | {
        backgroundColor?: 'white' | 'gray';
        enableHeader?: boolean;
        header?: {
          alignment: 'left' | 'center' | 'right';
          content?: {
            [k: string]: unknown;
          }[];
        };
        content?: {
          alignment: 'contentOnLeft' | 'contentOnRight';
          content: {
            [k: string]: unknown;
          }[];
          media: string | Media;
          enableExternalLink?: boolean;
          externalLink?: {
            label: string;
            url: string;
            newTab?: boolean;
          };
        };
        id?: string;
        blockName?: string;
        blockType: 'mediaContent';
      }
    | {
        backgroundColor?: 'white' | 'gray';
        columns?: {
          width: 'oneThird' | 'half' | 'twoThirds' | 'full';
          alignment: 'left' | 'center' | 'right';
          content: {
            [k: string]: unknown;
          }[];
          id?: string;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'content';
      }
    | {
        backgroundColor?: 'white' | 'gray';
        media: string | Media;
        size: 'normal' | 'wide' | 'fullscreen';
        caption: {
          [k: string]: unknown;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'media';
      }
    | {
        label: string;
        type: 'internal' | 'external';
        page: string | Page;
        url: string;
        newTab?: boolean;
        id?: string;
        blockName?: string;
        blockType: 'callToAction';
      }
    | {
        backgroundColor?: 'white' | 'gray';
        enableHeader?: boolean;
        header?: {
          content: {
            [k: string]: unknown;
          }[];
          description?: {
            [k: string]: unknown;
          }[];
        };
        alignment: 'left' | 'center' | 'right';
        tabs?: {
          title: string;
          layout?: (
            | {
                backgroundColor?: 'white' | 'gray';
                enableHeader?: boolean;
                header?: {
                  alignment: 'left' | 'center' | 'right';
                  content?: {
                    [k: string]: unknown;
                  }[];
                };
                content?: {
                  alignment: 'contentOnLeft' | 'contentOnRight';
                  content: {
                    [k: string]: unknown;
                  }[];
                  media: string | Media;
                  enableExternalLink?: boolean;
                  externalLink?: {
                    label: string;
                    url: string;
                    newTab?: boolean;
                  };
                };
                id?: string;
                blockName?: string;
                blockType: 'mediaContent';
              }
            | {
                backgroundColor?: 'white' | 'gray';
                columns?: {
                  width: 'oneThird' | 'half' | 'twoThirds' | 'full';
                  alignment: 'left' | 'center' | 'right';
                  content: {
                    [k: string]: unknown;
                  }[];
                  id?: string;
                }[];
                id?: string;
                blockName?: string;
                blockType: 'content';
              }
            | {
                backgroundColor?: 'white' | 'gray';
                media: string | Media;
                size: 'normal' | 'wide' | 'fullscreen';
                caption: {
                  [k: string]: unknown;
                }[];
                id?: string;
                blockName?: string;
                blockType: 'media';
              }
          )[];
          id?: string;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'tabs';
      }
    | {
        backgroundColor?: 'white' | 'gray';
        enableHeader?: boolean;
        header?: {
          alignment: 'left' | 'center' | 'right';
          content?: {
            [k: string]: unknown;
          }[];
        };
        smallCards?: {
          title: string;
          content?: {
            [k: string]: unknown;
          }[];
          media: string | Media;
          id?: string;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'smallCards';
      }
    | {
        backgroundColor?: 'white' | 'gray';
        cards?: {
          header: string;
          publishDate: string;
          category: string | Category;
          media: string | Media;
          internalLink?: {
            label: string;
            page: string | Page;
          };
          id?: string;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'cards';
      }
  )[];
  fullTitle?: string;
  breadcrumbs?: {
    page?: string | Page;
    url?: string;
    label?: string;
    id?: string;
  }[];
  slug: string;
  parent?: string | Page;
  meta?: {
    title?: string;
    description?: string;
  };
  createdAt: string;
  updatedAt: string;
}
export interface Media {
  id: string;
  alt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  createdAt: string;
  updatedAt: string;
}
export interface Category {
  id: string;
  label: string;
  createdAt: string;
  updatedAt: string;
}
export interface Menu {
  id: string;
  label: string;
  group?: {
    type: 'multiple' | 'single';
    menuGroups: {
      label: string;
      subMenus?: {
        label: string;
        page: string | Page;
        id?: string;
      }[];
      id?: string;
    }[];
    page: string | Page;
  };
  createdAt: string;
  updatedAt: string;
}
export interface User {
  id: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Redirect {
  id: string;
  from: string;
  to?: {
    type?: 'reference' | 'custom';
    reference: {
      value: string | Page;
      relationTo: 'pages';
    };
    url: string;
  };
  createdAt: string;
  updatedAt: string;
}
export interface Script {
  id: string;
  scripts?: {
    title: string;
    script: string;
    id?: string;
  }[];
}
export interface ContactUs {
  id: string;
  stickyButtonLabel: string;
  form?: {
    title: string;
    description: string;
    inputs?: {
      inputGroup?: {
        type: 'text' | 'textarea' | 'tel' | 'email';
        placeholder: string;
      };
      id?: string;
    }[];
    sendButtonLabel: string;
  };
}
